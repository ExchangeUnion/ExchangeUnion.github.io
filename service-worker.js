"use strict";function setOfCachedUrls(e){return e.keys().then(function(e){return e.map(function(e){return e.url})}).then(function(e){return new Set(e)})}var precacheConfig=[["/index.html","86619d51e5f7dcbfb55026ffda2c8594"],["/static/css/main.5252242a.css","5252242a43568862c92b6132d8465175"],["/static/js/0.2c38516b.chunk.js","636732295503120ab60d37a7c608d196"],["/static/js/1.dbf11003.chunk.js","a065a0b6b49e9332ae39acd2301af356"],["/static/js/10.03fa61b9.chunk.js","49ebb977448dc72434cb220716e506d1"],["/static/js/2.d53954dc.chunk.js","8c1febc85794cd1464c3992f9e3b070d"],["/static/js/3.b7875e96.chunk.js","70c871e93ada920bb9d10b952339a8f0"],["/static/js/4.47399524.chunk.js","ea4cabbac9300e7cc767e248ce1184ec"],["/static/js/5.7c053b49.chunk.js","57c9d96931c7cf118702b3ad86f5a74b"],["/static/js/6.5b3ae705.chunk.js","d9f707a5f9fc86af0805eee2a38d728d"],["/static/js/7.aa6b6d89.chunk.js","693fdae5c1025126ed0db32e8ec000ef"],["/static/js/8.c557a09d.chunk.js","e887fa0b7ee4189f315ff2904b780d81"],["/static/js/9.f183ece0.chunk.js","68c8cc7092e1e74d4fcbf34029d39967"],["/static/js/main.e82a9a5b.js","bd60ebc5210f9617c922888ec639a45d"],["/static/media/GitterBig.2e5bfd67.svg","2e5bfd677ab165830462e9aa22f600de"],["/static/media/benefit.eb895651.png","eb895651de61cf3974354c8f4e25afb5"],["/static/media/contact_success.c3d173e6.png","c3d173e674eb73a6ba8069928e9f2fc6"],["/static/media/home4.ef25f653.png","ef25f6531c63c628f419997ca930ec18"],["/static/media/home5.ae9d63e3.png","ae9d63e359dd74dde6f9aa0b2d310d6f"],["/static/media/okex.37933c90.png","37933c90d33332f37b5697eac3942c76"],["/static/media/overview.918d3832.png","918d38328b41c28f02eedf59736e45f9"],["/static/media/ripioCredit.7427f332.png","7427f3327b8f4266debfd79e42ce2a59"],["/static/media/step2.cc569461.png","cc56946148fa06d28db0bb1c6cc40143"]],cacheName="sw-precache-v3-sw-precache-webpack-plugin-"+(self.registration?self.registration.scope:""),ignoreUrlParametersMatching=[/^utm_/],addDirectoryIndex=function(e,t){var n=new URL(e);return"/"===n.pathname.slice(-1)&&(n.pathname+=t),n.toString()},cleanResponse=function(e){return e.redirected?("body"in e?Promise.resolve(e.body):e.blob()).then(function(t){return new Response(t,{headers:e.headers,status:e.status,statusText:e.statusText})}):Promise.resolve(e)},createCacheKey=function(e,t,n,a){var c=new URL(e);return a&&c.pathname.match(a)||(c.search+=(c.search?"&":"")+encodeURIComponent(t)+"="+encodeURIComponent(n)),c.toString()},isPathWhitelisted=function(e,t){if(0===e.length)return!0;var n=new URL(t).pathname;return e.some(function(e){return n.match(e)})},stripIgnoredUrlParameters=function(e,t){var n=new URL(e);return n.hash="",n.search=n.search.slice(1).split("&").map(function(e){return e.split("=")}).filter(function(e){return t.every(function(t){return!t.test(e[0])})}).map(function(e){return e.join("=")}).join("&"),n.toString()},hashParamName="_sw-precache",urlsToCacheKeys=new Map(precacheConfig.map(function(e){var t=e[0],n=e[1],a=new URL(t,self.location),c=createCacheKey(a,hashParamName,n,/\.\w{8}\./);return[a.toString(),c]}));self.addEventListener("install",function(e){e.waitUntil(caches.open(cacheName).then(function(e){return setOfCachedUrls(e).then(function(t){return Promise.all(Array.from(urlsToCacheKeys.values()).map(function(n){if(!t.has(n)){var a=new Request(n,{credentials:"same-origin"});return fetch(a).then(function(t){if(!t.ok)throw new Error("Request for "+n+" returned a response with status "+t.status);return cleanResponse(t).then(function(t){return e.put(n,t)})})}}))})}).then(function(){return self.skipWaiting()}))}),self.addEventListener("activate",function(e){var t=new Set(urlsToCacheKeys.values());e.waitUntil(caches.open(cacheName).then(function(e){return e.keys().then(function(n){return Promise.all(n.map(function(n){if(!t.has(n.url))return e.delete(n)}))})}).then(function(){return self.clients.claim()}))}),self.addEventListener("fetch",function(e){if("GET"===e.request.method){var t,n=stripIgnoredUrlParameters(e.request.url,ignoreUrlParametersMatching);(t=urlsToCacheKeys.has(n))||(n=addDirectoryIndex(n,"index.html"),t=urlsToCacheKeys.has(n));!t&&"navigate"===e.request.mode&&isPathWhitelisted(["^(?!\\/__).*"],e.request.url)&&(n=new URL("/index.html",self.location).toString(),t=urlsToCacheKeys.has(n)),t&&e.respondWith(caches.open(cacheName).then(function(e){return e.match(urlsToCacheKeys.get(n)).then(function(e){if(e)return e;throw Error("The cached response that was expected is missing.")})}).catch(function(t){return console.warn('Couldn\'t serve response for "%s" from cache: %O',e.request.url,t),fetch(e.request)}))}});