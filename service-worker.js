"use strict";function setOfCachedUrls(e){return e.keys().then(function(e){return e.map(function(e){return e.url})}).then(function(e){return new Set(e)})}var precacheConfig=[["/index.html","50ea209a8ddf2367d486778874143a62"],["/static/css/main.6a477a52.css","6a477a52ba6cb5a070cdff8be40b56f4"],["/static/js/0.9d1bee6a.chunk.js","88b5cc6716c0b4061812688561ce386a"],["/static/js/1.d51d375f.chunk.js","271fe6e7114345164a6141b5ade2f42b"],["/static/js/10.e956bb93.chunk.js","b856cb3e0d61b6c13dd328311d6ddafa"],["/static/js/2.b1032751.chunk.js","9ebf58c20ab5b74da79f3fa34f05a427"],["/static/js/3.a34fb855.chunk.js","6c128d35acbc3a90e05597d57f1465a3"],["/static/js/4.580afba1.chunk.js","e8d7d9f343990b5c6e107cc78d3e4cf0"],["/static/js/5.e162eb83.chunk.js","17df65c8de9a801178e12f752c6a10d2"],["/static/js/6.d5f88762.chunk.js","27e2f3b78a9032377b3119a951ed57c0"],["/static/js/7.2160d588.chunk.js","9591cbffc963b15e5e57ad9f399363de"],["/static/js/8.84bb97e8.chunk.js","eeb6f1948d1e51b03b52d8e2a1639daf"],["/static/js/9.5dca4083.chunk.js","2540605051ae13b4d88ab65bccc1ec1c"],["/static/js/test.6dbe27cb.js","20793b8fa6cf89b6bae9290839a8f098"],["/static/media/GitterBig.2e5bfd67.svg","2e5bfd677ab165830462e9aa22f600de"],["/static/media/benefit.eb895651.png","eb895651de61cf3974354c8f4e25afb5"],["/static/media/contact_success.c3d173e6.png","c3d173e674eb73a6ba8069928e9f2fc6"],["/static/media/home4.ef25f653.png","ef25f6531c63c628f419997ca930ec18"],["/static/media/home5.ae9d63e3.png","ae9d63e359dd74dde6f9aa0b2d310d6f"],["/static/media/okex.37933c90.png","37933c90d33332f37b5697eac3942c76"],["/static/media/overview.918d3832.png","918d38328b41c28f02eedf59736e45f9"],["/static/media/ripioCredit.7427f332.png","7427f3327b8f4266debfd79e42ce2a59"],["/static/media/step2.cc569461.png","cc56946148fa06d28db0bb1c6cc40143"]],cacheName="sw-precache-v3-sw-precache-webpack-plugin-"+(self.registration?self.registration.scope:""),ignoreUrlParametersMatching=[/^utm_/],addDirectoryIndex=function(e,t){var a=new URL(e);return"/"===a.pathname.slice(-1)&&(a.pathname+=t),a.toString()},cleanResponse=function(e){return e.redirected?("body"in e?Promise.resolve(e.body):e.blob()).then(function(t){return new Response(t,{headers:e.headers,status:e.status,statusText:e.statusText})}):Promise.resolve(e)},createCacheKey=function(e,t,a,n){var c=new URL(e);return n&&c.pathname.match(n)||(c.search+=(c.search?"&":"")+encodeURIComponent(t)+"="+encodeURIComponent(a)),c.toString()},isPathWhitelisted=function(e,t){if(0===e.length)return!0;var a=new URL(t).pathname;return e.some(function(e){return a.match(e)})},stripIgnoredUrlParameters=function(e,t){var a=new URL(e);return a.hash="",a.search=a.search.slice(1).split("&").map(function(e){return e.split("=")}).filter(function(e){return t.every(function(t){return!t.test(e[0])})}).map(function(e){return e.join("=")}).join("&"),a.toString()},hashParamName="_sw-precache",urlsToCacheKeys=new Map(precacheConfig.map(function(e){var t=e[0],a=e[1],n=new URL(t,self.location),c=createCacheKey(n,hashParamName,a,/\.\w{8}\./);return[n.toString(),c]}));self.addEventListener("install",function(e){e.waitUntil(caches.open(cacheName).then(function(e){return setOfCachedUrls(e).then(function(t){return Promise.all(Array.from(urlsToCacheKeys.values()).map(function(a){if(!t.has(a)){var n=new Request(a,{credentials:"same-origin"});return fetch(n).then(function(t){if(!t.ok)throw new Error("Request for "+a+" returned a response with status "+t.status);return cleanResponse(t).then(function(t){return e.put(a,t)})})}}))})}).then(function(){return self.skipWaiting()}))}),self.addEventListener("activate",function(e){var t=new Set(urlsToCacheKeys.values());e.waitUntil(caches.open(cacheName).then(function(e){return e.keys().then(function(a){return Promise.all(a.map(function(a){if(!t.has(a.url))return e.delete(a)}))})}).then(function(){return self.clients.claim()}))}),self.addEventListener("fetch",function(e){if("GET"===e.request.method){var t,a=stripIgnoredUrlParameters(e.request.url,ignoreUrlParametersMatching);(t=urlsToCacheKeys.has(a))||(a=addDirectoryIndex(a,"index.html"),t=urlsToCacheKeys.has(a));!t&&"navigate"===e.request.mode&&isPathWhitelisted(["^(?!\\/__).*"],e.request.url)&&(a=new URL("/index.html",self.location).toString(),t=urlsToCacheKeys.has(a)),t&&e.respondWith(caches.open(cacheName).then(function(e){return e.match(urlsToCacheKeys.get(a)).then(function(e){if(e)return e;throw Error("The cached response that was expected is missing.")})}).catch(function(t){return console.warn('Couldn\'t serve response for "%s" from cache: %O',e.request.url,t),fetch(e.request)}))}});